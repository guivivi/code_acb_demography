legend.text = element_text(size = 10),
legend.margin = margin(t = -0.3, unit = 'cm'))
View(df5)
View(results_2016)
View(results_2016)
View(results_2016_constituency)
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() #%>%
View(results_2016_constituency)
View(df4)
# ADD MINUTES PLAYED BY PLAYER:
df4 <- df3 %>%
mutate(Nationality = ifelse(Nationality == "Spain", "Spaniard", "Foreign")) %>%
group_by(Team, Nationality) %>%
summarise(count = sum(n)) %>%
ungroup()
df5 <- df4 %>%
spread(key = Nationality, value = count) #%>%
View(df5)
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) #%>%
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) #%>%
View(df5)
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) #%>%
str(results_2016_constituency)
str(df5)
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) #%>%
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) %>%
uncount(count) #%>%
?uncount
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
uncount(count) #%>%
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) %>%
uncount(count) #%>%
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) %>%
uncount(count) %>%
# calculate y position (needs to negative for one gender factor level)
group_by(constituency, gender) %>%
mutate(y = sequence(n())) %>%
mutate(y = ifelse(gender == "female", -y, y)) %>%
ungroup()# %>%
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) %>%
uncount(count) %>%
# calculate y position (needs to negative for one gender factor level)
group_by(constituency, gender) %>%
mutate(y = sequence(n())) %>%
mutate(y = ifelse(gender == "female", -y, y)) %>%
ungroup() %>%
# add labels for plot
mutate(status_label = case_when(status == "elected" ~ "elected",
status == "notelected" ~ "not elected"),
gender_label = case_when(gender == "female" ~ "Female candidates",
gender == "male" ~ "Male candidates"),
dominant_gender = case_when(status == "notelected" ~ "not elected",
status == "elected" & ratio > 1 ~ "Female majority elected",
status == "elected" & ratio < 1 ~ "Male majority elected",
status == "elected" & ratio == 1 ~ "Gender balance")) %>%
mutate_if(is.character, factor)
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) %>%
uncount(count) %>%
# calculate y position (needs to negative for one gender factor level)
group_by(constituency, gender) %>%
mutate(y = sequence(n())) %>%
mutate(y = ifelse(gender == "female", -y, y)) %>%
ungroup() #%>%
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
#uncount(count) %>%
# calculate y position (needs to negative for one gender factor level)
group_by(Team, category) %>%
mutate(y = sequence(n())) %>%
mutate(y = ifelse(category == "Foreign", -y, y)) %>%
ungroup() %>%
mutate_if(is.character, factor)
View(df5)
dummy_constituency =
tibble(y = c(-max(df5$y), 0, 0, max(df5$y)),
gender = c("Foreign", "Foreign", "Spaniard", "Spaniard"))
dummy_constituency
ggplot() +
geom_point(data = df5,
mapping = aes(x = Team,
y = y),
shape = 19,
size = 4) +
geom_blank(data = dummy_constituency,
mapping = aes(y = y)) +
facet_share(~ category,
dir = "h",
scales = "free",
reverse_num = TRUE) +
coord_flip() +
scale_x_discrete(name = NULL,
limits = rev(levels(df5$Team))) +
scale_y_continuous(name = NULL,
breaks = NULL) +
scale_color_manual(name = NULL,
values = c("indianred2", "palegreen3")) +
theme_bw() +
#theme_classic() +
#theme_test() +
theme(panel.grid = element_blank(),
legend.position = "bottom",
strip.text = element_text(size = 12),
legend.text = element_text(size = 10),
legend.margin = margin(t = -0.3, unit = 'cm'))
ggplot() +
geom_point(data = df5,
mapping = aes(x = Team,
y = y),
shape = 19,
size = 4)# +
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) %>%
uncount(count) %>%
# calculate y position (needs to negative for one gender factor level)
group_by(constituency, gender) %>%
mutate(y = sequence(n())) %>%
mutate(y = ifelse(gender == "female", -y, y)) %>%
ungroup() %>%
# add labels for plot
mutate(status_label = case_when(status == "elected" ~ "elected",
status == "notelected" ~ "not elected"),
gender_label = case_when(gender == "female" ~ "Female candidates",
gender == "male" ~ "Male candidates"),
dominant_gender = case_when(status == "notelected" ~ "not elected",
status == "elected" & ratio > 1 ~ "Female majority elected",
status == "elected" & ratio < 1 ~ "Male majority elected",
status == "elected" & ratio == 1 ~ "Gender balance")) %>%
mutate_if(is.character, factor)
dummy_constituency =
tibble(y = c(-max(results_2016_constituency$y), 0, 0, max(results_2016_constituency$y)),
gender = c("female", "female", "male", "male")) %>%
mutate(gender_label = case_when(gender == "female" ~ "Female candidates",
gender == "male" ~ "Male candidates"))
dummy_constituency
ggplot() +
geom_point(data = results_2016_constituency,
mapping = aes(x = constituency,
y = y,
color = dominant_gender),
shape = 19,
size = 4) #+
ggplot() +
geom_point(data = results_2016_constituency,
mapping = aes(x = constituency,
y = y),
shape = 19,
size = 4) #+
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) #%>%
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) #%>%
View(df5)
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) %>%
uncount(count) #%>%
View(results_2016)
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status"))# %>%
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) %>%
uncount(count) #%>%
View(results_2016_constituency)
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) #%>%
str(df5)
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) #%>%
str(results_2016_constituency)
str(df5)
?uncount
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
uncount(count) #%>%
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
#separate(category, into = c("gender", "status")) %>%
uncount(count) #%>%
View(results_2016_constituency)
View(results_2016)
df <- tibble(x = c("a", "b"), n = c(1, 2))
df
uncount(df, n)
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) #%>%
View(df5)
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) #%>%
View(results_2016_constituency)
gv <- results_2016_constituency
View(gv)
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) %>%
uncount(count) #%>%
View(results_2016_constituency)
str(gv)
str(df5)
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
mutate(Team = as.factor(Team)) %>%
uncount(count) #%>%
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
mutate(Team = as.factor(Team)) #%>%
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
mutate(Team = as.factor(Team)) #%>%
View(df5)
str(df5)
str(gv)
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) %>%
select(-status)
results_2016_constituency =
results_2016 %>%
group_by(constituency, gender, status) %>%
summarise(count = sum(count)) %>%
ungroup() %>%
# determine gender ration for plot coloring
unite(col = "status_gender", gender, status, sep = "_") %>%
spread(key = status_gender, value = count) %>%
mutate(ratio = female_elected / male_elected) %>%
gather(key = category, value = count, -constituency, -ratio) %>%
separate(category, into = c("gender", "status")) %>%
select(-status) %>%
uncount(count) #%>%
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
mutate(Team = as.factor(Team)) %>%
uncount(count) #%>%
uncount(df, n, .id = "id")
uncount(df, n)
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
mutate(Team = as.factor(Team)) %>%
uncount(count,  .id = "id") #%>%
df5 <- df4[1:2,] %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
mutate(Team = as.factor(Team)) %>%
uncount(count) #%>%
df5 <- df4[1:15,] %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
mutate(Team = as.factor(Team)) %>%
uncount(count) #%>%
df5 <- df4[1:10] %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
mutate(Team = as.factor(Team)) %>%
uncount(count) #%>%
df5 <- df4[1:10,] %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
mutate(Team = as.factor(Team)) %>%
uncount(count) #%>%
df5 <- df4[1:11,] %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
mutate(Team = as.factor(Team)) %>%
uncount(count) #%>%
View(df4)
uncount
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
mutate(Team = as.factor(Team)) #%>%
weights_quo <- enquo(df4$count)
?enquo
weights_quo <- df4$count
w <- dplyr::pull(dplyr::mutate(df5, `_weight` = !!weights_quo))
w <- dplyr::pull(dplyr::mutate(df5, weight = !!weights_quo))
df5 <- df4 %>%
spread(key = Nationality, value = count) %>%
mutate(ratio = Foreign / Spaniard) %>%
gather(key = category, value = count, -Team, -ratio) %>%
mutate(Team = as.factor(Team)) #%>%
ddf5
df5
uncount(df5, weights = count)
freq_table <- tribble(
~response,           ~n,
"too strict",        99,
"not strict enough", 507,
"just about right",  151,
"not sure",          42
)
freq_table
uncount(freq_table, weights = n)
View(df5)
uncount(df5[1:10,], weights = count)
uncount(df5[1:11,], weights = count)
uncount(df5[1:20,], weights = count)
uncount(df5[1:30,], weights = count)
uncount(df5[1:38,], weights = count)
uncount(df5[1:37,], weights = count)
View(df4)
View(df3)
# ADD MINUTES PLAYED BY PLAYER:
df4 <- df3 %>%
mutate(Nationality = ifelse(Nationality == "Spain", "Spaniard", "Foreign")) %>%
group_by(Team, Nationality) %>%
summarise(count = sum(n)) %>%
ungroup()
View(df4)
citation("flexdashboard")
fechas <- c("2020-09-04", "2020-09-29", "2020-09-29", "2020-10-29", "2020-11-30",
"2020-12-31", "2021-01-29", "2021-03-01", "2021-03-30", "2021-04-29",
"2021-05-30", "2021-06-29", "2021-06-29", "2021-07-29")
pago <- c(19.96, 1.33, 16.07, 37.99, 19, 19, 38.42, 19, 48.60, 18.42, 19, 1.33, 17.67, 39)
df0 <- data.frame(fecha = fechas, pago = pago)
df0
mean(df0$pago)
